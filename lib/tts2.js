function TTSForLB(){const e=document.createElement("audio");e.setAttribute("id","TTSAudio"),document.body.appendChild(e),e.muted=!1;const t=[];let o=!1,a=null;LB.setVariable("speaking",!1,"TTSKStatus");const s={self:this,PollySettings(e,t){AWS.config.credentials=e,AWS.config.region=t},async GetPollyVoices(){let e;const t=new AWS.Polly;return await t.describeVoices().promise().then((t=>e=t)).catch((e=>{if(e.error)throw e.error.message;throw e})),e},GoogleSettings(e){a=e},async GetGoogleVoices(){let e;const t=await fetch(`https://texttospeech.googleapis.com/v1beta1/voices?key=${a}`);return await t.json().then((t=>e=t)).catch((e=>{throw e?.error?.message})),e},Speak(e,a,s){o||0!==t.length?t.push({type:e,msg:a,settings:s}):i(e,a,s)},SpeakNext(){if(0===t.length)return;const e=t.shift();i(e.type,e.msg,e.settings)},Skip(){e.removeEventListener("ended",n,!1),e.replaceWith(e.cloneNode(!0)),s.SpeakNext()},Play(){if(e.paused){const t=e.play();void 0!==t&&(o=!0,LB.setVariable("speaking",!0,"TTSKStatus"),e.addEventListener("ended",n,!1),t.catch((()=>{})))}},Pause(){e.replaceWith(e.cloneNode(!0));const t=e.play();void 0!==t&&t.then((t=>{e.pause(),o=!1,LB.setVariable("speaking",!1,"TTSKStatus")})).catch((()=>{}))},Mute(){e.muted=!0,LB.setVariable("muted",!0,"TTSKStatus")},Unmute(){e.muted=!1,LB.setVariable("muted",!1,"TTSKStatus")},VolumeUp(){const t=e.volume+.1;e.volume=t<=1?t:1},VolumeDown(){const t=e.volume-.1;e.volume=t>=0?t:0},SetVolume(t){e.volume=t}};function n(){e.replaceWith(e.cloneNode(!0)),e.removeEventListener("ended",n,!1),o=!1,LB.setVariable("speaking",!1,"TTSKStatus"),s.SpeakNext()}async function i(e,t,s){if(!t)return void LB.alert("TTS by K Error: Message is empty!");o=!0,LB.setVariable("speaking",!0,"TTSKStatus");const n=(JSON.parse(sessionStorage.getItem("TTSCached"))||[]).filter((e=>e.message.toLowerCase()==t.toLowerCase()&&JSON.stringify(e.settings)==JSON.stringify(s)));let i=n[0]?.audioStream;"Polly"===e&&(i=n[0]?.audioStream?.data),i?r(e,null,null,i):await async function(e,t,o){switch(e){default:break;case"Polly":{const e=new AWS.Polly,a="neural"!==o.pollyVoiceEngine?`pitch="${o.pitch}"`:"",s="neural"!==o.pollyVoiceEngine?"soft"==o.effect?'phonation="soft"':`name="${o.effect}"`:'name="null"',n={OutputFormat:"mp3",Text:"manual"===o.inputType?t:`<speak><prosody rate="${o.speed}" ${a}><amazon:effect ${s}>${t}</amazon:effect></prosody></speak>`,VoiceId:o.pollyVoiceId||"Brian",TextType:"ssml",Engine:o.pollyVoiceEngine||"standard"};console.log(n);const i=await e.synthesizeSpeech(n).promise();if(!i.error){const e=i.AudioStream;if(!e)throw console.log(i),i;return e}console.log(i),LB.alert(`TTS Polly Error: ${i.error.message}`)}break;case"Google":{const e={audioConfig:{audioEncoding:"MP3",pitch:o.pitch,speakingRate:o.speed},voice:{languageCode:o.region,name:o.voice},input:{text:t}},s=await fetch(`https://texttospeech.googleapis.com/v1beta1/text:synthesize?key=${a}`,{method:"POST",body:JSON.stringify(e)}),n=await s.json();if(!n.audioContent)throw n?.error?.message;return`data:audio/mp3;base64,${n.audioContent}`}}}(e,t,s).then((o=>r(e,t,s,o))).catch((e=>LB.alert(`TTS Google Error: ${e}`)))}function r(t,o,a,s){e.addEventListener("ended",n,!1);let i=s;if("Polly"===t){const e=new Uint8Array(s).buffer,t=new Blob([e]);i=URL.createObjectURL(t)}e.src=i;const r=e.play();if(void 0!==r&&r.then((e=>{})).catch((e=>{console.log(e),LB.alert(`TTS Error: ${e}`)})),!o)return;const l=JSON.parse(sessionStorage.getItem("TTSCached"))||[];l.push({type:t,message:o,settings:a,audioStream:s}),sessionStorage.setItem("TTSCached",JSON.stringify(l))}return s}
