const DiscTwitchRelay={chattersImgUrls:JSON.parse(sessionStorage.getItem("chattersImgUrls"))||{},settings:void 0,socket:void 0,heartbeat:5e3,session_id:void 0,seq:void 0,callbacks:{},next_callbacks:{},emit(e,t){null!=this.callbacks[e]&&this.callbacks[e].forEach((e=>{e(t)})),null!=this.next_callbacks[e]&&(this.next_callbacks[e].forEach((e=>{e(t)})),delete this.next_callbacks[e])},on(e,t){null==this.callbacks[e]&&(this.callbacks[e]=[]),this.callbacks[e].push(t)},next(e,t){null==this.next_callbacks[e]&&(this.next_callbacks[e]=[]),this.next_callbacks[e].push(t)},gateway:void 0,calls:{},*chunks(e,t){for(let s=0;s<e.length;s+=t)yield e.slice(s,s+t)},async fetchDiscordRelay(e,t,s){const o={method:t,headers:{"Content-Type":"application/json"}};s&&(o.body=JSON.stringify(s));const n=await fetch(e,o);let c;if(!n.ok){const e=await n.json(),t=e.message||e.error||"Something went wrong.";throw new Error(t)}try{c=await n.json()}catch(e){}return c},Chatters:async e=>{let t=JSON.parse(sessionStorage.getItem("chatters"))||[];await fetch(`https://lioranboardproxy.herokuapp.com/https://tmi.twitch.tv/group/user/${e}/chatters`).then((e=>e.json())).then((e=>{const{broadcaster:s,moderators:o,viewers:n,vips:c}=e.chatters,i=[...o,...n,...c];if(0==i.length)return void LB.alert("Discord Relay error: Wrong channel name. No chatters found.");s[0]&&i.push(s[0]);const a=t;t=[],i.forEach((e=>{a.includes(e)||t.push(e)})),Array.prototype.unique=function(){const e=this.concat();for(let t=0;t<e.length;++t)for(let s=t+1;s<e.length;++s)e[t]===e[s]&&e.splice(s--,1);return e},sessionStorage.setItem("chatters",JSON.stringify(i.concat(a).unique()))})).catch((e=>{console.log(e)}));[...DiscTwitchRelay.chunks(t,100)].forEach((async e=>{const t=e.join("&login=");await fetch(`https://api.twitch.tv/helix/users?login=${t}`,{headers:{"Client-ID":TWITCH_CLIENT_ID,Authorization:`Bearer ${DiscTwitchRelay.settings.oauthtoken}`,"Content-Type":"application/json"}}).then((e=>e.json())).then((e=>{e.data.forEach((e=>{const t=e.profile_image_url||e.offline_image_url;DiscTwitchRelay.chattersImgUrls[e.login]=t}))})).catch((e=>console.log(e)))})),sessionStorage.setItem("chattersImgUrls",JSON.stringify(DiscTwitchRelay.chattersImgUrls)),DiscTwitchRelay.timeout=setTimeout(DiscTwitchRelay.Chatters,6e4,e)},TwitchWebhook(){const{settings:e}=this;if(0!=e.array.length){const t=e.array;this.settings.array=[];let s=[],o=" ";if("Pretty"==e.mode&&t.length<11)for(let e=0;e<t.length;e++){const o=`${t[e].user_type} `||"",n=DiscTwitchRelay.chattersImgUrls[t[e].username.toLowerCase()];s.push({author:{name:o+t[e].username,url:`https://twitch.tv/${t[e].username}`,icon_url:n},description:t[e].text,color:this.convertColor(t[e].color)})}else for(let e=0;e<t.length;e++)o=`${o}_ _ \n**${t[e].username}**\n${t[e].text}`,s=void 0;const n={content:o,username:"Twitch Chat"};s&&(n.embeds=s),DiscTwitchRelay.fetchDiscordRelay(e.webhook,"POST",n).catch((e=>DiscTwitchRelay.LBAlert(`Discord Relay webhook: ${e}`)))}},convertColor(e){const t=[];let s,o;if(-1!=e.search("#")&&(e=e.substr(1)),3===e.length)for(s=e.split(""),o=0;o<3;o++)t.push(parseInt(`${s[o]}${s[o]}`,16));else if(6===e.length)for(s=e.match(/.{2}/g),o=0;o<3;o++)t.push(parseInt(s[o],16));t[2],t[1],t[0];return t[2]+(t[1]<<8)+(t[0]<<16)},async connect(e){const{settings:t}=this;let s="wss://gateway.discord.gg?v=8&encoding=json";const o=this;await fetch("https://discord.com/api/gateway","GET").then((e=>s=`${e.url}?v=8&encoding=json`)).catch((e=>{}));try{clearInterval(o.ping)}catch(e){}o.gateway=s,o.socket=new WebSocket(s),o.socket.onopen=function(e){o.emit("open","Connection established!")},o.socket.onmessage=function(s){let{data:n}=s;if("string"==typeof s.data&&(n=JSON.parse(s.data)),"READY"==n.t&&(o.emit("DiscordSuccess",s),o.session_id=n.d.session_id,o.reconnecting?(o.reconnecting=!1,o.emit("reconnected")):o.emit("ready")),null!=n.s&&(o.seq=n.s),null!=n.op&&10==n.op?(o.heartbeat=n.d.heartbeat_interval,o.ping=setInterval((()=>{null!=o.socket&&1===o.socket.readyState?o.socket.send(JSON.stringify({op:1,d:null})):clearInterval(o.ping)}),o.heartbeat),e?o.socket.send(JSON.stringify({op:6,d:{token:o.settings.token,session_id:o.session_id,seq:o.seq}})):o.socket.send(JSON.stringify({op:2,d:{token:t.token,intents:640,large_threshold:100,properties:{os:t.os||"windows",browser:t.device||"LBTwitch",device:t.device||"LBTwitch",referrer:"",referring_domain:""}}}))):n.op,0==n.op){const e=n.t,{d:t}=n;o.emit(e,t),"MESSAGE_CREATE"==e?o.emit("message",t):"GUILD_MEMBER_REMOVE"==e?o.emit("member_remove",t):"GUILD_MEMBER_ADD"==e?o.emit("member_add",t):"MESSAGE_UPDATE"==e&&o.emit("edited",t)}7==n.op&&o.close(!0,!0),9==n.op&&o.close(!0),n.op},o.socket.onerror=function(e){o.socket.readyState==o.socket.CLOSED&&o.close(!0),o.emit("socketError",e.reason)},o.socket.onclose=function(e){4004!==e.code&&o.close(!0),o.emit("socketClosedError",e.reason)}},reconnecting:!1,close(e,t){const s=this;s.timeoutconnect&&clearTimeout(s.timeoutconnect),s.ping&&clearInterval(s.ping),s.socket.onclose=void 0,s.socket.onerror=void 0,s.socket=void 0,e&&(s.timeoutconnect=setTimeout((()=>{s.connect(t)}),3e3)),s.emit("closed")},send(e){p.socket.send(JSON.stringify(e))}};